<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="/CEX/CL_WORD_WRITER" VERSION="1" LANGU="E" DESCRIPT="Excel writer 2007" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="/CEX/CL_OOXML_WRITER">
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_DOCUMENT" VERSION="1" LANGU="E" DESCRIPT="wordDocument XML File Name" EXPOSURE="1" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;word/document.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_FONTTABLE" VERSION="1" LANGU="E" DESCRIPT="wordFontTable XML File Name" EXPOSURE="1" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;word/fontTable.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_RELATIONSHIPS" VERSION="1" LANGU="E" DESCRIPT="wordWebSettings XML File Name" EXPOSURE="1" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="&apos;word/_rels/document.xml.rels&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_SETTINGS" VERSION="1" LANGU="E" DESCRIPT="wordSettings XML File Name" EXPOSURE="1" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="&apos;word/settings.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_STYLES" VERSION="1" LANGU="E" DESCRIPT="wordStyles XML File Name" EXPOSURE="1" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="&apos;word/styles.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_STYLESWITHEFFECTS" VERSION="1" LANGU="E" DESCRIPT="wordStylesWithEffects XML File Name" EXPOSURE="1" STATE="1" EDITORDER="6 " ATTDECLTYP="2" ATTVALUE="&apos;word/stylesWithEffects.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_THEME" VERSION="1" LANGU="E" DESCRIPT="wordWebSettings XML File Name" EXPOSURE="1" STATE="1" EDITORDER="7 " ATTDECLTYP="2" ATTVALUE="&apos;word/theme/theme1.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="C_WORD_WEBSETTINGS" VERSION="1" LANGU="E" DESCRIPT="wordWebSettings XML File Name" EXPOSURE="1" STATE="1" EDITORDER="8 " ATTDECLTYP="2" ATTVALUE="&apos;word/webSettings.xml&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <inheritance CLSNAME="/CEX/CL_WORD_WRITER" REFCLSNAME="/CEX/CL_OOXML_WRITER" VERSION="1" STATE="1">
  <redefinition CLSNAME="/CEX/CL_WORD_WRITER" REFCLSNAME="/CEX/CL_OOXML_WRITER" VERSION="1" MTDNAME="CREATE" EXPOSURE="1"/>
  <redefinition CLSNAME="/CEX/CL_WORD_WRITER" REFCLSNAME="/CEX/CL_OOXML_WRITER" VERSION="1" MTDNAME="CREATE_CONTENT_TYPES" EXPOSURE="1"/>
  <redefinition CLSNAME="/CEX/CL_WORD_WRITER" REFCLSNAME="/CEX/CL_OOXML_WRITER" VERSION="1" MTDNAME="CREATE_DOCPROPS_APP" EXPOSURE="1"/>
  <redefinition CLSNAME="/CEX/CL_WORD_WRITER" REFCLSNAME="/CEX/CL_OOXML_WRITER" VERSION="1" MTDNAME="CREATE_RELATIONSHIPS" EXPOSURE="1"/>
 </inheritance>
 <method CLSNAME="/CEX/CL_OOXML_WRITER" CMPNAME="CREATE" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD CREATE.

  DATA: lo_zip              TYPE REF TO cl_abap_zip.

  DATA: lv_content         TYPE xstring.

  ep_ooxml_document = super-&gt;create( ).

* Gets basic ZIP file and add specific elements
  CREATE OBJECT lo_zip.
  lo_zip-&gt;load( ep_ooxml_document ).

**********************************************************************
* STEP 1: Add word/_rels/document.xml.rels to zip
  lv_content = me-&gt;create_word_relationships( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_relationships
               content = lv_content ).

**********************************************************************
* STEP 2: Add word/theme/theme1.xml to zip
  lv_content = me-&gt;create_word_theme( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_theme
               content = lv_content ).

**********************************************************************
* STEP 3: Add word/document.xml to zip
  lv_content = me-&gt;create_word_document( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_document
               content = lv_content ).

**********************************************************************
* STEP 4: Add word/styles.xml to zip
  lv_content = me-&gt;create_word_styles( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_styles
               content = lv_content ).

**********************************************************************
* STEP 5: Add word/_rels/document.xml.rels to zip
  lv_content = me-&gt;create_word_fonttable( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_fonttable
               content = lv_content ).

**********************************************************************
* STEP 6: Add word/theme/theme1.xml to zip
  lv_content = me-&gt;create_word_settings( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_settings
               content = lv_content ).

**********************************************************************
* STEP 7: Add word/document.xml to zip
  lv_content = me-&gt;create_word_styleswitheffects( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_styleswitheffects
               content = lv_content ).

**********************************************************************
* STEP 8: Add word/styles.xml to zip
  lv_content = me-&gt;create_word_websettings( ).
  lo_zip-&gt;add( name    = me-&gt;c_word_websettings
               content = lv_content ).

  ep_ooxml_document = lo_zip-&gt;save( ).

ENDMETHOD.</source>
 </method>
 <method CLSNAME="/CEX/CL_OOXML_WRITER" CMPNAME="CREATE_CONTENT_TYPES" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD create_content_types.

  DATA: lc_xml_node_override        TYPE string VALUE &apos;Override&apos;,
        &quot; Node attributes
        lc_xml_attr_partname        TYPE string VALUE &apos;PartName&apos;,
        lc_xml_attr_contenttype     TYPE string VALUE &apos;ContentType&apos;,
        &quot; Node partnumber
        lc_xml_node_document_pn     TYPE string VALUE &apos;/word/document.xml&apos;,
        lc_xml_node_styles_pn       TYPE string VALUE &apos;/word/styles.xml&apos;,
        lc_xml_node_stylesweff_pn   TYPE string VALUE &apos;/word/stylesWithEffects.xml&apos;,
        lc_xml_node_settings_pn     TYPE string VALUE &apos;/word/settings.xml&apos;,
        lc_xml_node_websettings_pn  TYPE string VALUE &apos;/word/webSettings.xml&apos;,
        lc_xml_node_fonttable_pn    TYPE string VALUE &apos;/word/fontTable.xml&apos;,
        lc_xml_node_theme_pn        TYPE string VALUE &apos;/word/theme/theme1.xml&apos;,
        lc_xml_node_core_pn         TYPE string VALUE &apos;/docProps/core.xml&apos;,
        lc_xml_node_app_pn          TYPE string VALUE &apos;/docProps/app.xml&apos;,
        &quot; Node contentType
        lc_xml_node_document_ct     TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml&apos;,
        lc_xml_node_styles_ct       TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml&apos;,
        lc_xml_node_stylesweff_ct   TYPE string VALUE &apos;application/vnd.ms-word.stylesWithEffects+xml&apos;,
        lc_xml_node_settings_ct     TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml&apos;,
        lc_xml_node_websettings_ct  TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml&apos;,
        lc_xml_node_fonttable_ct    TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml&apos;,
        lc_xml_node_theme_ct        TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.theme+xml&apos;,
        lc_xml_node_core_ct         TYPE string VALUE &apos;application/vnd.openxmlformats-package.core-properties+xml&apos;,
        lc_xml_node_app_ct          TYPE string VALUE &apos;application/vnd.openxmlformats-officedocument.extended-properties+xml&apos;.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  DATA: lv_subrc          TYPE sysubrc,
        lv_value          TYPE string.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create standard relationship
  ep_content = super-&gt;create_content_types( ).

**********************************************************************
* STEP 2: modify XML adding Word specific attributes

  CREATE OBJECT lo_document_xml.
  lv_subrc = lo_document_xml-&gt;parse_xstring( ep_content ).

  lo_document ?= lo_document_xml-&gt;m_document.
  lo_element_root = lo_document-&gt;if_ixml_node~get_first_child( ).

  &quot; Document node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_document_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_document_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Styles node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_styles_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_styles_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Styles with effects node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_stylesweff_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_stylesweff_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Settings node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_settings_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_settings_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Web settings node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_websettings_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_websettings_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Font Table node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_fonttable_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_fonttable_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Theme node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_theme_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_theme_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Core node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_core_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_core_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; App node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_override
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_partname
                                value = lc_xml_node_app_pn ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_contenttype
                                value = lc_xml_node_app_ct ).
  lo_element_root-&gt;append_child( new_child = lo_element ).


**********************************************************************
* STEP x: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

ENDMETHOD.</source>
 </method>
 <method CLSNAME="/CEX/CL_OOXML_WRITER" CMPNAME="CREATE_DOCPROPS_APP" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD create_docprops_app.

  DATA: lc_xml_node_characters        TYPE string VALUE &apos;Characters&apos;,
        lc_xml_node_charactersspaces  TYPE string VALUE &apos;CharactersWithSpaces&apos;,
        lc_xml_node_lines             TYPE string VALUE &apos;Lines&apos;,
        lc_xml_node_pages             TYPE string VALUE &apos;Pages&apos;,
        lc_xml_node_paragraphs        TYPE string VALUE &apos;Paragraphs&apos;,
        lc_xml_node_template          TYPE string VALUE &apos;Template&apos;,
        lc_xml_node_totaltime         TYPE string VALUE &apos;TotalTime&apos;,
        lc_xml_node_words             TYPE string VALUE &apos;Words&apos;.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  DATA: lv_subrc          TYPE sysubrc,
        lv_value          TYPE string.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create standard relationship
  ep_content = super-&gt;create_docprops_app( ).

**********************************************************************
* STEP 2: modify XML adding Word specific attributes

  CREATE OBJECT lo_document_xml.
  lv_subrc = lo_document_xml-&gt;parse_xstring( ep_content ).

  lo_document ?= lo_document_xml-&gt;m_document.
  lo_element_root = lo_document-&gt;if_ixml_node~get_first_child( ).

  &quot; Characters
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_characters
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~characters.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; CharactersWithSpaces
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_charactersspaces
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~characterswithspaces.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Lines
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_lines
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~lines.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Pages
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_pages
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~pages.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Paragraphs
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_paragraphs
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~paragraphs.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Template
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_template
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~template.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; TotalTime
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_totaltime
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~totaltime.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

  &quot; Words
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_words
                                                   parent = lo_document ).
  lv_value = lo_word-&gt;/cex/if_word_book_properties~words.
  CONDENSE lv_value.
  lo_element-&gt;set_value( value = lv_value ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

**********************************************************************
* STEP x: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

ENDMETHOD.</source>
 </method>
 <method CLSNAME="/CEX/CL_OOXML_WRITER" CMPNAME="CREATE_RELATIONSHIPS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>METHOD create_relationships.

  DATA: lc_xml_node_relationship  TYPE string VALUE &apos;Relationship&apos;,
        &quot; Node attributes
        lc_xml_attr_id            TYPE string VALUE &apos;Id&apos;,
        lc_xml_attr_type          TYPE string VALUE &apos;Type&apos;,
        lc_xml_attr_target        TYPE string VALUE &apos;Target&apos;,
        &quot; Node id
        lc_xml_node_rid1_id       TYPE string VALUE &apos;rId1&apos;,
        &quot; Node type
        lc_xml_node_rid1_tp       TYPE string VALUE &apos;http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument&apos;,
        &quot; Node target
        lc_xml_node_rid1_tg       TYPE string VALUE &apos;word/document.xml&apos;.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  DATA: lv_subrc          TYPE sysubrc,
        lv_value          TYPE string.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create standard relationship
  ep_content = super-&gt;create_relationships( ).

**********************************************************************
* STEP 2: modify XML adding Word specific attributes

  CREATE OBJECT lo_document_xml.
  lv_subrc = lo_document_xml-&gt;parse_xstring( ep_content ).

  lo_document ?= lo_document_xml-&gt;m_document.
  lo_element_root = lo_document-&gt;if_ixml_node~get_first_child( ).

  &quot; rels node
  lo_element = lo_document-&gt;create_simple_element( name   = lc_xml_node_relationship
                                                   parent = lo_document ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_id
                                value = lc_xml_node_rid1_id ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_type
                                value = lc_xml_node_rid1_tp ).
  lo_element-&gt;set_attribute_ns( name  = lc_xml_attr_target
                                value = lc_xml_node_rid1_tg ).
  lo_element_root-&gt;append_child( new_child = lo_element ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).




ENDMETHOD.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_DOCUMENT" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/document.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_DOCUMENT" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>METHOD create_word_document.


  DATA: lo_word             TYPE REF TO /cex/cl_word,
        lo_ixml             TYPE REF TO if_ixml,
        lo_document         TYPE REF TO if_ixml_document,
        lo_element_root     TYPE REF TO if_ixml_element,
        lo_element_body     TYPE REF TO if_ixml_element,
        lo_element_p        TYPE REF TO if_ixml_element,
        lo_element_sectpr   TYPE REF TO if_ixml_element,
        lo_element_pgsz     TYPE REF TO if_ixml_element,
        lo_element_pgmar    TYPE REF TO if_ixml_element,
        lo_element_cols     TYPE REF TO if_ixml_element,
        lo_element_docgrid  TYPE REF TO if_ixml_element,
        lo_encoding         TYPE REF TO if_ixml_encoding,
        lo_streamfactory    TYPE REF TO if_ixml_stream_factory,
        lo_ostream          TYPE REF TO if_ixml_ostream,
        lo_renderer         TYPE REF TO if_ixml_renderer.

  DATA: lc_xml_node_document  TYPE string VALUE &apos;document&apos;,
        lc_xml_node_body      TYPE string VALUE &apos;body&apos;,
        lc_xml_node_p         TYPE string VALUE &apos;p&apos;,
        lc_xml_node_sectpr    TYPE string VALUE &apos;sectPr&apos;,
        lc_xml_node_pgsz      TYPE string VALUE &apos;pgSz&apos;,
        lc_xml_node_pgmar     TYPE string VALUE &apos;pgMar&apos;,
        lc_xml_node_cols      TYPE string VALUE &apos;cols&apos;,
        lc_xml_node_docgrid   TYPE string VALUE &apos;docGrid&apos;,
        &quot; Node attributes
        lc_xml_attr_rsidr         TYPE string VALUE &apos;rsidR&apos;,
        lc_xml_attr_rsidrdefault  TYPE string VALUE &apos;rsidRDefault&apos;,
        lc_xml_attr_rsidsect      TYPE string VALUE &apos;rsidSect&apos;,
        lc_xml_attr_w             TYPE string VALUE &apos;w&apos;,
        lc_xml_attr_h             TYPE string VALUE &apos;h&apos;,
        lc_xml_attr_top           TYPE string VALUE &apos;top&apos;,
        lc_xml_attr_right         TYPE string VALUE &apos;right&apos;,
        lc_xml_attr_bottom        TYPE string VALUE &apos;bottom&apos;,
        lc_xml_attr_left          TYPE string VALUE &apos;left&apos;,
        lc_xml_attr_header        TYPE string VALUE &apos;header&apos;,
        lc_xml_attr_footer        TYPE string VALUE &apos;footer&apos;,
        lc_xml_attr_gutter        TYPE string VALUE &apos;gutter&apos;,
        lc_xml_attr_space         TYPE string VALUE &apos;space&apos;,
        lc_xml_attr_linepitch     TYPE string VALUE &apos;linePitch&apos;,
        &quot; Namespace prefix
        lc_ve_ns              TYPE string VALUE &apos;ve&apos;,
        lc_o_ns               TYPE string VALUE &apos;o&apos;,
        lc_r_ns               TYPE string VALUE &apos;r&apos;,
        lc_m_ns               TYPE string VALUE &apos;m&apos;,
        lc_v_ns               TYPE string VALUE &apos;v&apos;,
        lc_wp_ns              TYPE string VALUE &apos;wp&apos;,
        lc_w10_ns             TYPE string VALUE &apos;w10&apos;,
        lc_w_ns               TYPE string VALUE &apos;w&apos;,
        lc_wne_ns             TYPE string VALUE &apos;wne&apos;,
        &quot; Node namespace
        lc_xml_node_ve_ns     TYPE string VALUE &apos;http://schemas.openxmlformats.org/markup-compatibility/2006&apos;,
        lc_xml_node_o_ns      TYPE string VALUE &apos;urn:schemas-microsoft-com:office:office&apos;,
        lc_xml_node_r_ns      TYPE string VALUE &apos;http://schemas.openxmlformats.org/officeDocument/2006/relationships&apos;,
        lc_xml_node_m_ns      TYPE string VALUE &apos;http://schemas.openxmlformats.org/officeDocument/2006/math&apos;,
        lc_xml_node_v_ns      TYPE string VALUE &apos;urn:schemas-microsoft-com:vml&apos;,
        lc_xml_node_wp_ns     TYPE string VALUE &apos;http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing&apos;,
        lc_xml_node_w10_ns    TYPE string VALUE &apos;urn:schemas-microsoft-com:office:word&apos;,
        lc_xml_node_w_ns      TYPE string VALUE &apos;http://schemas.openxmlformats.org/wordprocessingml/2006/main&apos;,
        lc_xml_node_wne_ns    TYPE string VALUE &apos;http://schemas.microsoft.com/office/word/2006/wordml&apos;.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/document.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

***********************************************************************
* STEP 3: Create main node relationships
  lo_element_root  = lo_document-&gt;create_simple_element( name   = lc_xml_node_document
                                                         parent = lo_document ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:ve&apos;
                                     value = lc_xml_node_ve_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:o&apos;
                                     value = lc_xml_node_o_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:r&apos;
                                     value = lc_xml_node_r_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:m&apos;
                                     value = lc_xml_node_m_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:v&apos;
                                     value = lc_xml_node_v_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:wp&apos;
                                     value = lc_xml_node_wp_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:w10&apos;
                                     value = lc_xml_node_w10_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:w&apos;
                                     value = lc_xml_node_w_ns ).
  lo_element_root-&gt;set_attribute_ns( name  = &apos;xmlns:wne&apos;
                                     value = lc_xml_node_wne_ns ).

**********************************************************************
* STEP 4: Create subnodes
  &quot; body
  lo_element_body = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_body
                                                           prefix = lc_w_ns
                                                           parent = lo_document ).
  &quot; p
  lo_element_p = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_p
                                                        prefix = lc_w_ns
                                                        parent = lo_document ).

  lo_element_p-&gt;set_attribute_ns( name    = lc_xml_attr_rsidr
                                  prefix  = lc_w_ns
                                  value   = &apos;00C17603&apos; ).

  lo_element_p-&gt;set_attribute_ns( name    = lc_xml_attr_rsidrdefault
                                  prefix  = lc_w_ns
                                  value   = &apos;00C17603&apos; ).

  &quot; sectPr
  lo_element_sectpr = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_sectpr
                                                             prefix = lc_w_ns
                                                             parent = lo_document ).

  lo_element_p-&gt;set_attribute_ns( name    = lc_xml_attr_rsidr
                                  prefix  = lc_w_ns
                                  value   = &apos;00C17603&apos; ).

  lo_element_p-&gt;set_attribute_ns( name    = lc_xml_attr_rsidsect
                                  prefix  = lc_w_ns
                                  value   = &apos;00C17603&apos; ).

  &quot; pgSz
  lo_element_pgsz = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_pgsz
                                                           prefix = lc_w_ns
                                                           parent = lo_document ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_w
                                     prefix  = lc_w_ns
                                     value   = &apos;11906&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_h
                                     prefix  = lc_w_ns
                                     value   = &apos;16838&apos; ).

  &quot; pgMar
  lo_element_pgmar = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_pgmar
                                                            prefix = lc_w_ns
                                                            parent = lo_document ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_top
                                     prefix  = lc_w_ns
                                     value   = &apos;1417&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_right
                                     prefix  = lc_w_ns
                                     value   = &apos;1134&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_bottom
                                     prefix  = lc_w_ns
                                     value   = &apos;1134&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_left
                                     prefix  = lc_w_ns
                                     value   = &apos;1134&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_header
                                     prefix  = lc_w_ns
                                     value   = &apos;708&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_footer
                                     prefix  = lc_w_ns
                                     value   = &apos;708&apos; ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_gutter
                                     prefix  = lc_w_ns
                                     value   = &apos;0&apos; ).

  &quot; cols
  lo_element_cols = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_cols
                                                           prefix = lc_w_ns
                                                           parent = lo_document ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_space
                                     prefix  = lc_w_ns
                                     value   = &apos;708&apos; ).

  &quot; docGrid
  lo_element_docgrid = lo_document-&gt;create_simple_element_ns( name   = lc_xml_node_docgrid
                                                              prefix = lc_w_ns
                                                              parent = lo_document ).

  lo_element_pgsz-&gt;set_attribute_ns( name    = lc_xml_attr_linepitch
                                     prefix  = lc_w_ns
                                     value   = &apos;360&apos; ).


  lo_element_sectpr-&gt;append_child( new_child = lo_element_pgsz ). &quot; pgSz node
  lo_element_sectpr-&gt;append_child( new_child = lo_element_pgmar ). &quot; pgMar node
  lo_element_sectpr-&gt;append_child( new_child = lo_element_cols ). &quot; cols node
  lo_element_sectpr-&gt;append_child( new_child = lo_element_docgrid ). &quot; docGrid node

  lo_element_p-&gt;append_child( new_child = lo_element_sectpr ). &quot; p node

  lo_element_body-&gt;append_child( new_child = lo_element_p ). &quot; body node

  lo_element_root-&gt;append_child( new_child = lo_element_body ). &quot; TitlesOfParts

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

ENDMETHOD.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_FONTTABLE" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/fontTable.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_FONTTABLE" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_FONTTABLE.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/fontTable.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_RELATIONSHIPS" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/_rels/document.xml.rels&apos;" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_RELATIONSHIPS" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_RELATIONSHIPS.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/_rels/document.xml.rels into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_SETTINGS" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/settings.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_SETTINGS" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_SETTINGS.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/settings.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_STYLES" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/styles.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_STYLES" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_STYLES.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/styles.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_STYLESWITHEFFECTS" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/stylesWithEffects.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_STYLESWITHEFFECTS" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_STYLESWITHEFFECTS.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/stylesWithEffects.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_THEME" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/theme/theme1.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_THEME" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_THEME.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/theme1.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
 <method CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_WEBSETTINGS" VERSION="1" LANGU="E" DESCRIPT="Create &apos;word/webSettings.xml&apos;" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="/CEX/CL_WORD_WRITER" CMPNAME="CREATE_WORD_WEBSETTINGS" SCONAME="EP_CONTENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="XSTRING"/>
  <source>method CREATE_WORD_WEBSETTINGS.

  DATA: lo_word           TYPE REF TO /cex/cl_word,
        lo_ixml           TYPE REF TO if_ixml,
        lo_document       TYPE REF TO if_ixml_document,
        lo_document_xml   TYPE REF TO cl_xml_document,
        lo_element_root   TYPE REF TO if_ixml_node,
        lo_element        TYPE REF TO if_ixml_element,
        lo_node           TYPE REF TO if_ixml_node,
        lo_encoding       TYPE REF TO if_ixml_encoding,
        lo_streamfactory  TYPE REF TO if_ixml_stream_factory,
        lo_ostream        TYPE REF TO if_ixml_ostream,
        lo_renderer       TYPE REF TO if_ixml_renderer.

  lo_word ?= me-&gt;ooxml_doc.

**********************************************************************
* STEP 1: Create word/webSettings.xml into the root of the ZIP
  lo_ixml = cl_ixml=&gt;create( ).

**********************************************************************
* STEP 2: Set document attributes
  lo_encoding = lo_ixml-&gt;create_encoding( byte_order = if_ixml_encoding=&gt;co_platform_endian
                                          character_set = &apos;utf-8&apos; ).
  lo_document = lo_ixml-&gt;create_document( ).
  lo_document-&gt;set_encoding( lo_encoding ).
  lo_document-&gt;set_standalone( abap_true ).

**********************************************************************
* STEP 3: Create xstring stream
  CLEAR ep_content.
  lo_ixml = cl_ixml=&gt;create( ).
  lo_streamfactory = lo_ixml-&gt;create_stream_factory( ).
  lo_ostream = lo_streamfactory-&gt;create_ostream_xstring( string = ep_content ).
  lo_renderer = lo_ixml-&gt;create_renderer( ostream  = lo_ostream document = lo_document ).
  lo_renderer-&gt;render( ).

endmethod.</source>
 </method>
</CLAS>
